//
// PostgreSQL is released under the PostgreSQL License, a liberal Open Source
// license, similar to the BSD or MIT licenses.
//
// PostgreSQL Database Management System
// (formerly known as Postgres, then as Postgres95)
//
// Portions Copyright © 1996-2020, The PostgreSQL Global Development Group
//
// Portions Copyright © 1994, The Regents of the University of California
//
// Portions Copyright 2023 Google LLC
//
// Permission to use, copy, modify, and distribute this software and its
// documentation for any purpose, without fee, and without a written agreement
// is hereby granted, provided that the above copyright notice and this
// paragraph and the following two paragraphs appear in all copies.
//
// IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR
// DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING
// LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,
// EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
// INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
// FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN
// "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE
// MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
//------------------------------------------------------------------------------

edition = "2023";

package postgres_translator;

import "zetasql/public/function.proto";

message FunctionTypeProto {
  string name = 1;
  uint32 oid = 2;
}

message FunctionArgumentProto {
  FunctionTypeProto type = 1;
  zetasql.FunctionEnums.ArgumentCardinality cardinality = 2;
  zetasql.FunctionEnums.NamedArgumentKind named_argument_kind = 3;
  string name = 4;
}

message FunctionSignatureProto {
  FunctionTypeProto return_type = 1;
  repeated FunctionArgumentProto arguments = 2;
  bool is_enabled_in_catalog = 3;
  uint32 oid = 4;
}

message FunctionProto {
  repeated string name_path = 1;
  repeated FunctionSignatureProto signatures = 2;
}

message CatalogProto {
  repeated FunctionProto functions = 1;
}
