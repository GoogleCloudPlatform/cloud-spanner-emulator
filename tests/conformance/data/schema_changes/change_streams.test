# # # # --- Success Test Cases --- # # # #

# CREATE CHANGE STREAM for Table
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream FOR Users;
--
CREATE CHANGE STREAM change_stream FOR Users;
==
# CREATE CHANGE STREAM for Table(Column)
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream FOR Users(Name);
--
CREATE CHANGE STREAM change_stream FOR Users(Name);
==
# CREATE CHANGE STREAM for Table()
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream FOR Users();
--
CREATE CHANGE STREAM change_stream FOR Users();
==
# CREATE CHANGE STREAM with valid retention period
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream FOR ALL OPTIONS ( retention_period = '7d' );
--
CREATE CHANGE STREAM change_stream FOR ALL OPTIONS ( retention_period = '7d' );
==
# CREATE CHANGE STREAM with valid value capture type
CREATE CHANGE STREAM change_stream OPTIONS ( value_capture_type = 'NEW_VALUES');
--
CREATE CHANGE STREAM change_stream OPTIONS ( value_capture_type = 'NEW_VALUES' );
==
# CREATE CHANGE STREAM for explicit columns
CREATE TABLE Albums (
  AlbumId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(AlbumId);
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream FOR Users(), Albums(Name);
--
CREATE CHANGE STREAM change_stream FOR Users(), Albums(Name);
==
# CREATE CHANGE STREAM for table and explicit columns
CREATE TABLE Albums (
  AlbumId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(AlbumId);
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream FOR Users, Albums(Name);
--
CREATE CHANGE STREAM change_stream FOR Users, Albums(Name);
==
# CREATE CHANGE STREAM for all
CREATE CHANGE STREAM change_stream FOR ALL;
--
CREATE CHANGE STREAM change_stream FOR ALL;
==
# CREATE CHANGE STREAM for `ALL`
CREATE TABLE `ALL` (
  Id STRING(20) NOT NULL,
  SomeColumn STRING(20),
) PRIMARY KEY(Id);
CREATE CHANGE STREAM change_stream FOR `ALL`;
--
CREATE TABLE `ALL` ( Id STRING(20) NOT NULL, SomeColumn STRING(20), ) PRIMARY KEY(Id); CREATE CHANGE STREAM change_stream FOR `ALL`;
==
# CREATE CHANGE STREAM for `ALL` tracking some column
CREATE TABLE `ALL` (
  Id STRING(20) NOT NULL,
  SomeColumn STRING(20),
) PRIMARY KEY(Id);
CREATE CHANGE STREAM change_stream FOR `ALL`(SomeColumn);
--
CREATE CHANGE STREAM change_stream FOR `ALL`(SomeColumn);
==
# CREATE CHANGE STREAM for `ALL` tracking `ALL` column
CREATE TABLE `ALL` (
  Id STRING(20) NOT NULL,
  `All` STRING(20),
) PRIMARY KEY(Id);
CREATE CHANGE STREAM change_stream FOR `ALL`(`All`);
--
CREATE CHANGE STREAM change_stream FOR `ALL`(`All`);
==
# CREATE CHANGE STREAM change_stream;
CREATE CHANGE STREAM change_stream;
--
CREATE CHANGE STREAM change_stream;
==
# CREATE CHANGE STREAM massively quoted;
CREATE TABLE Albums (
  AlbumId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(AlbumId);
CREATE TABLE Singers (
  SingerId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(SingerId);
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM `ChangeStreamQuoted`
  FOR `Users`, `Albums`(`Name`), `Singers`();
--
CREATE CHANGE STREAM ChangeStreamQuoted FOR Users, Albums(Name), Singers();
==
# CREATE CHANGE STREAM with both retention period and value capture type;
CREATE CHANGE STREAM change_stream OPTIONS ( value_capture_type = 'NEW_VALUES', retention_period = '7d' );
--
CREATE CHANGE STREAM change_stream OPTIONS ( value_capture_type = 'NEW_VALUES', retention_period = '7d' );
==
# ALTER CHANGE STREAM SET FOR ALL;
CREATE CHANGE STREAM change_stream;
ALTER CHANGE STREAM change_stream SET FOR ALL;
--
CREATE CHANGE STREAM change_stream FOR ALL;
==
# ALTER CHANGE STREAM SET FOR Table;
CREATE TABLE Singers (
  SingerId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(SingerId);
CREATE CHANGE STREAM change_stream;
ALTER CHANGE STREAM change_stream SET FOR Singers;
--
CREATE TABLE Singers ( SingerId STRING(20) NOT NULL, Name STRING(20), ) PRIMARY KEY(SingerId); CREATE CHANGE STREAM change_stream FOR Singers;
==
# ALTER CHANGE STREAM to track multiple tables
CREATE TABLE a (
  id INT64 NOT NULL,
) PRIMARY KEY(id);
CREATE TABLE b (
  id INT64 NOT NULL,
) PRIMARY KEY(id);
CREATE CHANGE STREAM s FOR a;
ALTER CHANGE STREAM s SET FOR a, b;
--
CREATE TABLE a ( id INT64 NOT NULL, ) PRIMARY KEY(id); CREATE TABLE b ( id INT64 NOT NULL, ) PRIMARY KEY(id); CREATE CHANGE STREAM s FOR a, b;
==
# ALTER CHANGE STREAM SET OPTIONS;
CREATE CHANGE STREAM change_stream;
ALTER CHANGE STREAM change_stream SET OPTIONS (value_capture_type = 'OLD_AND_NEW_VALUES', retention_period = '2d', exclude_insert = true, exclude_update = false, exclude_delete = true, exclude_ttl_deletes = false);
--
CREATE CHANGE STREAM change_stream OPTIONS ( value_capture_type = 'OLD_AND_NEW_VALUES', retention_period = '2d', exclude_insert = true, exclude_update = false, exclude_delete = true, exclude_ttl_deletes = false );
==
# ALTER CHANGE STREAM DROP FOR ALL;
CREATE CHANGE STREAM change_stream FOR ALL;
ALTER CHANGE STREAM change_stream DROP FOR ALL;
--
CREATE CHANGE STREAM change_stream;
==
# DROP CHANGE STREAM;
CREATE CHANGE STREAM change_stream;
DROP CHANGE STREAM change_stream;
--

==
# # # # --- Parsing Failure Test Cases --- # # # #
# CREATE CHANGE STREAM error with nothing following FOR;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream FOR ;
--
ERROR: Error parsing Spanner DDL statement
==
# Missing alter action;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream;
--
ERROR: Error parsing Spanner DDL statement
==
# Missing change stream name;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM SET FOR ALL;
--
ERROR: Error parsing Spanner DDL statement
==
# Missing SET;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream FOR ALL;
--
ERROR: Error parsing Spanner DDL statement
==
# Missing SET;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream OPTIONS FOR ALL;
--
ERROR: Error parsing Spanner DDL statement
==
# Missing FOR CLAUSE;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream SET FOR;
--
ERROR: Error parsing Spanner DDL statement
==
# Invalid FOR CLAUSE;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream SET FOR ALL();
--
ERROR: Error parsing Spanner DDL statement
==
# Invalid FOR CLAUSE;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream SET FOR ALL, Users;
--
ERROR: Error parsing Spanner DDL statement
==
# Empty options;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream SET OPTIONS();
--
ERROR: Error parsing Spanner DDL statement
==
# Duplicate options;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream SET OPTIONS(retention_period = '7d', retention_period = '5d');
--
ERROR: Error parsing Spanner DDL statement
==
# Invalid DROP FOR;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream DROP FOR;
--
ERROR: Error parsing Spanner DDL statement
==
# Invalid DROP FOR;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream DROP FOR;
--
ERROR: Error parsing Spanner DDL statement
==
# Invalid DROP FOR;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream DROP FOR `ALL`;
--
ERROR: Error parsing Spanner DDL statement
==
# Invalid DROP FOR;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
ALTER CHANGE STREAM change_stream DROP FOR Users;
--
ERROR: Error parsing Spanner DDL statement
==
# DROP CHANGE STREAM no name;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
DROP CHANGE STREAM;
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM error for ALL(SomeColumn)
CREATE CHANGE STREAM change_stream FOR ALL(SomeColumn);
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM error for ALL()
CREATE CHANGE STREAM change_stream FOR ALL();
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM error for Users and ALL
CREATE CHANGE STREAM change_stream FOR Users, ALL;
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM error for Users, ALL, Albums()
CREATE CHANGE STREAM change_stream FOR Users, ALL, Albums();
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM error for Users(ALL)
CREATE CHANGE STREAM change_stream FOR Users(ALL);
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM with no options;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream OPTIONS ();
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM with duplicate options;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream OPTIONS (retention_period = '7d', retention_period = '7d');
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM with invalid options;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream OPTIONS (invalid_option = '7d');
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM with incorrect retention;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream OPTIONS (retention_period = true);
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM with incorrect value capture type;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream OPTIONS (value_capture_type = -1);
--
ERROR: Error parsing Spanner DDL statement
==
# CREATE CHANGE STREAM error for Users, ALL, Albums()
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream FOR Users, ALL, Albums();
--
ERROR: Error parsing Spanner DDL statement
==
# # # # --- Failure Test Cases --- # # # #
# CREATE CHANGE STREAM for explicit key columns.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users(UserId);
--
ERROR:.* should not list the primary key column UserId of Table Users.*
==
# ALTER CHANGE STREAM for explicit key columns.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users(Name);
ALTER CHANGE STREAM foo SET FOR Users(UserId);
--
ERROR:.* should not list the primary key column UserId of Table Users.*
==
# CREATE CHANGE STREAM for repeated tables.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users,Users;
--
ERROR:.* foo should not list Table Users more than once in the FOR clause.
==
# CREATE CHANGE STREAM for repeated columns.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users(Name),Users(Name);
--
ERROR:.* foo should not list Table Users more than once in the FOR clause.
==
# CREATE CHANGE STREAM for non existed table.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR bar;
--
ERROR:.* do not track database objects of this type, or this Table does not exist.
==
# CREATE CHANGE STREAM for non existed column.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users(Age);
--
ERROR:.* cannot track column Age because it does not exist in Table Users.
==
# CREATE more than 3 CHANGE STREAM for one table.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
CREATE CHANGE STREAM foo2 FOR Users;
CREATE CHANGE STREAM foo3 FOR Users;
CREATE CHANGE STREAM foo4 FOR Users;
--
ERROR:.* because it is not allowed to have more than 3 Change Streams.*
==
# CREATE more than 3 CHANGE STREAM for one column.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users(Name);
CREATE CHANGE STREAM foo2 FOR Users(Name);
CREATE CHANGE STREAM foo3 FOR Users(Name);
CREATE CHANGE STREAM foo4 FOR Users(Name);
--
ERROR:.* because it is not allowed to have more than 3 Change Streams.*
==
# CREATE more than 3 CHANGE STREAM for one table.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
CREATE CHANGE STREAM foo2 FOR Users;
CREATE CHANGE STREAM foo3 FOR Users;
CREATE CHANGE STREAM foo4 FOR Users;
--
ERROR:.* because it is not allowed to have more than 3 Change Streams.*
==
# CREATE more than 3 CHANGE STREAM for one of all tables.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE TABLE Albums (
  AlbumId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(AlbumId);
CREATE CHANGE STREAM foo FOR Users;
CREATE CHANGE STREAM foo2 FOR Users;
CREATE CHANGE STREAM foo3 FOR Users;
CREATE CHANGE STREAM foo4 FOR ALL;
--
ERROR:.* because it is not allowed to have more than 3 Change Streams.*
==
# DROP TABLE explicitly tracked by a change stream.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
DROP TABLE Users;
--
ERROR:.* Tables explicitly tracked by a Change Stream cannot be dropped.*
==
# DROP COLUMN explicitly tracked by a change stream.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users(Name);
ALTER TABLE Users DROP Name;
--
ERROR:.* Columns explicitly tracked by a Change Stream cannot be dropped.*
==
# CREATE CHANGE STREAM for unsupported tracked obejct.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
CREATE CHANGE STREAM bar FOR foo;
--
ERROR:.* Change Stream bar does not support tracking Change Stream foo.*
==
# CREATE CHANGE STREAM more than ten times in one database.
# --regex
CREATE TABLE Users1 (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE TABLE Users2 (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE TABLE Users3 (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE TABLE Users4 (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo1 FOR Users1;
CREATE CHANGE STREAM foo2 FOR Users1;
CREATE CHANGE STREAM foo3 FOR Users1;
CREATE CHANGE STREAM foo4 FOR Users2;
CREATE CHANGE STREAM foo5 FOR Users2;
CREATE CHANGE STREAM foo6 FOR Users2;
CREATE CHANGE STREAM foo7 FOR Users3;
CREATE CHANGE STREAM foo8 FOR Users3;
CREATE CHANGE STREAM foo9 FOR Users3;
CREATE CHANGE STREAM foo10 FOR Users4;
CREATE CHANGE STREAM foo11 FOR Users4;
--
ERROR:.* because the maximum number of Change Streams per Database .*
==
# ALTER CHANGE STREAM with invalid retention.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
ALTER CHANGE STREAM foo SET OPTIONS ( retention_period='50d' )
--
ERROR:.* Change Streams retention period must be a value in the range .*
==
# ALTER CHANGE STREAM with invalid value capture type.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
ALTER CHANGE STREAM foo SET OPTIONS ( value_capture_type='FooBar' )
--
ERROR:.* Invalid value_capture_type.*
==
# ALTER CHANGE STREAM with invalid set FOR CLAUSE for nonexistent table.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
ALTER CHANGE STREAM foo SET FOR bar
--
ERROR:.* this Table does not exist.*
==
# ALTER CHANGE STREAM with invalid set FOR CLAUSE for nonexistent column.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
ALTER CHANGE STREAM foo SET FOR Users(bar)
--
ERROR:.* it does not exist in Table Users.*
==
# CREATE CHANGE STREAM with same name of existing change streams.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
CREATE CHANGE STREAM foo FOR ALL;
--
ERROR:.* Duplicate name in schema: foo.*
==
# CREATE CHANGE STREAM with same name of existing change streams tvf.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
CREATE TABLE READ_foo()PRIMARY KEY();
--
ERROR:.* Duplicate name in schema: READ_foo.*
==
# DROP CHANGE STREAM nonexistent.
# --regex
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM foo FOR Users;
DROP CHANGE STREAM bar;
--
ERROR:.* Change Stream not found: bar.*
==
# ALTER CHANGE STREAM SET NULL OPTIONS;
CREATE TABLE Singers (
  SingerId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(SingerId);
CREATE CHANGE STREAM change_stream FOR Singers;
ALTER CHANGE STREAM change_stream SET OPTIONS (value_capture_type = NULL, retention_period = NULL);
--
CREATE TABLE Singers ( SingerId STRING(20) NOT NULL, Name STRING(20), ) PRIMARY KEY(SingerId); CREATE CHANGE STREAM change_stream FOR Singers;
==
# CREATE CHANGE STREAM with null retention period;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream OPTIONS (retention_period = null);
--
CREATE TABLE Users ( UserId STRING(20) NOT NULL, Name STRING(20), ) PRIMARY KEY(UserId); CREATE CHANGE STREAM change_stream;
==
# CREATE CHANGE STREAM with null value capture type;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream OPTIONS (value_capture_type = null);
--
CREATE TABLE Users ( UserId STRING(20) NOT NULL, Name STRING(20), ) PRIMARY KEY(UserId); CREATE CHANGE STREAM change_stream;
==
# ALTER CHANGE STREAM DROP FOR ALL without FOR clause;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
CREATE CHANGE STREAM change_stream;
ALTER CHANGE STREAM change_stream DROP FOR ALL;
--
ERROR: The ALTER CHANGE STREAM DROP FOR clause cannot be applied on Change Stream change_stream, because it does not have a FOR clause
==
# DROP nonexistent change stream;
CREATE TABLE Users (
  UserId STRING(20) NOT NULL,
  Name STRING(20),
) PRIMARY KEY(UserId);
DROP CHANGE STREAM change_stream;
--
ERROR: Change Stream not found: change_stream
==
