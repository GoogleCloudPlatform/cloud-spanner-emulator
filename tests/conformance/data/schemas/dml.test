# Note that PG databases by default have lower case table and column names. To
# use uppercase names, you have to quote them. But the GSQL and PG quoting
# syntax is incompatible so we use lower-case names in both schemas to avoid
# having to maintain two copies of each query.
@Dialect=GOOGLE_STANDARD_SQL
CREATE TABLE users(
  id       INT64 NOT NULL,
  name     STRING(MAX),
  age      INT64,
  updated  TIMESTAMP,
) PRIMARY KEY (id);
CREATE TABLE nullable(
  key      INT64,
  value    STRING(MAX),
) PRIMARY KEY (key);
CREATE TABLE singleton(
  col1     STRING(MAX),
  col2     STRING(MAX),
) PRIMARY KEY ();
CREATE TABLE arrayfields(
  key      INT64,
  arraycol ARRAY<INT64>,
) PRIMARY KEY(key);
CREATE TABLE numerictable(
  key    NUMERIC,
  val    INT64,
) PRIMARY KEY(key);
CREATE TABLE jsontable(
  id     INT64 NOT NULL,
  val    JSON,
) PRIMARY KEY(id);
CREATE TABLE tablegen(
  k      INT64,
  v1     INT64,
  v2     INT64,
  g1     INT64 AS (g2 + 1) STORED,
  g2     INT64 NOT NULL AS (v1 + v2) STORED,
  g3     INT64 AS (g1) STORED,
  v3     INT64 NOT NULL DEFAULT (2),
) PRIMARY KEY (k);
CREATE INDEX nullableindex ON nullable(value);
CREATE TABLE gpktable1(
  k1 INT64 ,
  v1 INT64 ,
  k2_stored INT64 NOT NULL AS (v1+1) STORED,
  v2 INT64,
) PRIMARY KEY (k1, k2_stored);
CREATE TABLE gpktable2(
  k1 INT64 NOT NULL,
  k2_stored INT64 AS (k1*3) STORED,
  v1 INT64 NOT NULL,
  v2_stored INT64 AS (v1+5) STORED,
) PRIMARY KEY (k2_stored);
===
@Dialect=POSTGRESQL
CREATE TABLE users(
  id       bigint NOT NULL PRIMARY KEY,
  name     varchar,
  age      bigint,
  updated  timestamptz
);
CREATE TABLE arrayfields(
  key      bigint PRIMARY KEY,
  arraycol bigint[]
);
CREATE TABLE numerictable(
  id    bigint NOT NULL PRIMARY KEY,
  val   numeric
);
CREATE TABLE jsontable(
  id     bigint NOT NULL PRIMARY KEY,
  val    jsonb
);
CREATE TABLE tablegen(
  k      bigint PRIMARY KEY,
  v1     bigint,
  v2     bigint,
  g1     bigint GENERATED ALWAYS AS (v2 + 1) STORED,
  g2     bigint NOT NULL GENERATED ALWAYS AS (v1 + v2) STORED,
  g3     bigint GENERATED ALWAYS AS (v1) STORED,
  v3     bigint NOT NULL DEFAULT (2)
);
CREATE TABLE gpktable1(
  k1 bigint ,
  v1 bigint ,
  k2_stored bigint GENERATED ALWAYS AS (v1+1) STORED NOT NULL,
  v2 bigint,
  PRIMARY KEY(k1, k2_stored)
);
CREATE TABLE gpktable2(
  k1 bigint NOT NULL,
  k2_stored bigint GENERATED ALWAYS AS (k1*3) STORED,
  v1 bigint NOT NULL,
  v2_stored bigint GENERATED ALWAYS AS (v1+5) STORED,
  PRIMARY KEY (k2_stored)
);
