#
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

################################################################################
#                                     BUILD                                    #
################################################################################

# We use the bazel base image which comes with all bazel dependencies.
FROM arm64v8/ubuntu:impish as build

ARG DEBIAN_FRONTEND=noninteractive

RUN \
apt-get update && \
apt-get -y install \
    python \
    python3 \
    python-pkg-resources \
    python3-pkg-resources \
    software-properties-common \
    unzip

RUN add-apt-repository ppa:ubuntu-toolchain-r/test

RUN apt-get -qq update                                                      && \
    apt-get -qq install -y curl                                             && \
    apt-get -qq install -y openjdk-8-jdk                                    && \
    apt-get -qq install -y patch                                            && \
    apt-get -qq install -y gcc-9 g++-9 libc6-dev make tzdata                && \
    apt-get -qq install -y ca-certificates libgnutls30                      && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90           \
                        --slave   /usr/bin/g++ g++ /usr/bin/g++-9           && \
    update-alternatives --set gcc /usr/bin/gcc-9

# Install Golang
RUN curl -L -o go1.17.7.linux-arm64.tar.gz https://go.dev/dl/go1.17.7.linux-arm64.tar.gz \
    && tar -C /usr/local -xzf go1.17.7.linux-arm64.tar.gz

WORKDIR /src

# Install Bazel
RUN curl -L -o bazel https://releases.bazel.build/3.7.2/release/bazel-3.7.2-linux-arm64 && chmod +x bazel

# Copy over the emulator code base into the container. We explicitly copy only
# the required files to maximize chances that the layer will be cached. There
# does not seem to be a nicer way to do this than multiple COPY commands as
# COPY copies the contents of the source, not the directory itself.
COPY BUILD.bazel WORKSPACE .bazelrc ./
COPY common      common/
COPY gateway     gateway/
COPY frontend    frontend/
COPY backend     backend/
COPY binaries    binaries/
COPY tests       tests/
COPY build/bazel build/bazel/

RUN ./bazel build -c opt ...

# Generate licenses file.
RUN for file in $(find -L src/bazel-src/external                               \
                       -name "LICENSE" -o -name "COPYING")                   ; \
    do                                                                         \
      echo "----"                                                            ; \
      echo $file                                                             ; \
      echo "----"                                                            ; \
      cat $file                                                              ; \
    done > licenses.txt                                                     && \
    gzip licenses.txt

###############################################################################
#                                   RELEASE                                    #
################################################################################

# Now build the release image from the build image.
FROM arm64v8/ubuntu:impish

## Copy binaries.
COPY --from=build /src/bazel-bin/binaries/emulator_main .
COPY --from=build /src/bazel-bin/binaries/gateway_main_/gateway_main .

RUN apt-get update && apt-get -qq install -y tzdata ca-certificates

## Copy licenses
COPY --from=build /src/licenses.txt.gz .

## Expose the default ports 9010 (gRPC) and 9020 (REST)
EXPOSE 9010 9020

## Run the gateway process, bind to 0.0.0.0 as under MacOS, listening on
## localhost will make the server invisible outside the container.
CMD ["./gateway_main", "--hostname", "0.0.0.0"]
