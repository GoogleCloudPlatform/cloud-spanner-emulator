#
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

################################################################################
#                                     BUILD                                    #
################################################################################

FROM ubuntu:18.04 as build

# Install prerequisites for bazel
RUN apt-get update && apt-get -qq install curl tar build-essential wget        \
    python python3 zip unzip

# Setup java
RUN apt-get update && apt-get -qq install -y default-jre default-jdk

# Install bazel
ARG TARGETARCH
RUN wget https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-linux-${TARGETARCH}
RUN cp bazelisk-linux-${TARGETARCH} /usr/local/bin/bazel
RUN chmod u+x /usr/local/bin/bazel
ENV PATH=$PATH:/usr/bin:/usr/local/bin
ENV EXTRA_BAZEL_ARGS="--tool_java_runtime_version=local_jdk"

RUN apt-get update && DEBIAN_FRONTEND="noninteractive"                         \
    TZ="America/Los_Angeles" apt-get install -y tzdata

# Unfortunately ZetaSQL has issues with clang (default bazel compiler), so
# we install GCC. Also install make for rules_foreign_cc bazel rules.
ENV GCC_VERSION=8
RUN apt-get -qq update                                                      && \
    apt-get -qq install -y software-properties-common make rename  git
RUN add-apt-repository ppa:ubuntu-toolchain-r/test                          && \
    apt-get -qq update                                                      && \
    apt-get -qq install -y gcc-${GCC_VERSION} g++-${GCC_VERSION}            && \
    apt-get -qq install -y ca-certificates libgnutls30                      && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 90  \
                        --slave   /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} && \
    update-alternatives --set gcc /usr/bin/gcc-${GCC_VERSION}

# Install the en* locales required for PG scalar functions.
RUN apt-get -qq install language-pack-en

# Copy over the emulator code base into the container.
COPY . src/

# Build the emulator.
# Excluding all targets from //third_party/spanner_pg/src/... from building as
# not all the targets from the PostgreSQL source needs to be built and some of
# the unused build targets will fail.
ENV BAZEL_CXXOPTS="-std=c++17"
RUN cd src                                                                  && \
    CC=/usr/bin/gcc CXX=/usr/bin/g++                                           \
    bazel build -c opt -- ... -third_party/spanner_pg/src/...

# Generate licenses file.
RUN for file in $(find -L src/bazel-src/external                               \
                       -name "LICENSE" -o -name "COPYING")                   ; \
    do                                                                         \
      echo "----"                                                            ; \
      echo $file                                                             ; \
      echo "----"                                                            ; \
      cat $file                                                              ; \
    done > licenses.txt                                                     && \
    gzip licenses.txt

################################################################################
#                                   RELEASE                                    #
################################################################################

# Now build the release image from the build image.
FROM gcr.io/distroless/cc-debian11

# Copy binaries.
COPY --from=build /src/bazel-bin/binaries/emulator_main .
COPY --from=build /src/bazel-bin/binaries/gateway_main_/gateway_main .

# Copy licenses
COPY --from=build /licenses.txt.gz .

# Expose the default ports 9010 (gRPC) and 9020 (REST)
EXPOSE 9010 9020

# Run the gateway process, bind to 0.0.0.0 as under MacOS, listening on
# localhost will make the server invisible outside the container.
CMD ["./gateway_main", "--hostname", "0.0.0.0"]
